<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>A játékosok hangosan a kő – papír – olló-t mondják, minden szónál megemelve az ökölbe szorított kezüket. A harmadik szó után, vagy az utána következő ütemben a játékosok kezükkel felveszik a három alakzat egyikét és megmutatják az ellenfelüknek.

Jelzések:
– kő: zárt ököl
– papír: nyitott tenyér
– olló: kinyújtott, szétnyitott mutató és középső ujj

A cél az, hogy olyat mutassunk, amely legyőzi a másikat:
– a kő kicsorbítja az ollót: a kő győz
– az olló elvágja a papírt: az olló győz
– a papír becsomagolja a követ: a papír győz
– Ha mindketten ugyanazt mutatják, a játék döntetlen és újat játszanak.

Ha az egyik játékos követ mutat a másik ollót akar, de gyorsan megváltoztatja papírra és a másik játékos észreveszi vagy egy külső ember (érdemes többen lenni hogy elkerüljük a csalást) akkor a másik nyer.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>